export function getExcludeObj(config) {
    let strs;
    let regExps;
    if (config) {
        if (config.exclude) {
            strs = config.exclude.map((url) => url.toLowerCase());
        }
        if (config.excludeRegexp) {
            regExps = config.excludeRegexp.map((regexp) => new RegExp(regexp, 'i'));
        }
    }
    return { strs, regExps };
}
export function isIgnored(url, excludeStrings, excludeRegexps) {
    if (excludeStrings) {
        // do not show the loader for urls in the `exclude` list
        if (excludeStrings.findIndex((str) => url.toLowerCase().startsWith(str)) !==
            -1) {
            return true;
        }
    }
    if (excludeRegexps) {
        // do not show the loader for urls which matches regexps in the `excludeRegexp` list
        if (excludeRegexps.findIndex((regexp) => regexp.test(url)) !== -1) {
            return true;
        }
    }
    return false;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXVpLWxvYWRlci9zcmMvbGliL3V0aWxzL2Z1bmN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLFVBQVUsYUFBYSxDQUFDLE1BQWM7SUFDMUMsSUFBSSxJQUFjLENBQUM7SUFDbkIsSUFBSSxPQUFpQixDQUFDO0lBRXRCLElBQUksTUFBTSxFQUFFO1FBQ1YsSUFBSSxNQUFNLENBQUMsT0FBTyxFQUFFO1lBQ2xCLElBQUksR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7U0FDdkQ7UUFFRCxJQUFJLE1BQU0sQ0FBQyxhQUFhLEVBQUU7WUFDeEIsT0FBTyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUN6RTtLQUNGO0lBRUQsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQsTUFBTSxVQUFVLFNBQVMsQ0FDdkIsR0FBVyxFQUNYLGNBQXdCLEVBQ3hCLGNBQXdCO0lBRXhCLElBQUksY0FBYyxFQUFFO1FBQ2xCLHdEQUF3RDtRQUN4RCxJQUNFLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDcEUsQ0FBQyxDQUFDLEVBQ0Y7WUFDQSxPQUFPLElBQUksQ0FBQztTQUNiO0tBQ0Y7SUFFRCxJQUFJLGNBQWMsRUFBRTtRQUNsQixvRkFBb0Y7UUFDcEYsSUFBSSxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDakUsT0FBTyxJQUFJLENBQUM7U0FDYjtLQUNGO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgcHJlZmVyLWFycm93L3ByZWZlci1hcnJvdy1mdW5jdGlvbnMgKi9cbmltcG9ydCB7IENvbmZpZywgRXhjbHVkZSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRFeGNsdWRlT2JqKGNvbmZpZzogQ29uZmlnKTogRXhjbHVkZSB7XG4gIGxldCBzdHJzOiBzdHJpbmdbXTtcbiAgbGV0IHJlZ0V4cHM6IFJlZ0V4cFtdO1xuXG4gIGlmIChjb25maWcpIHtcbiAgICBpZiAoY29uZmlnLmV4Y2x1ZGUpIHtcbiAgICAgIHN0cnMgPSBjb25maWcuZXhjbHVkZS5tYXAoKHVybCkgPT4gdXJsLnRvTG93ZXJDYXNlKCkpO1xuICAgIH1cblxuICAgIGlmIChjb25maWcuZXhjbHVkZVJlZ2V4cCkge1xuICAgICAgcmVnRXhwcyA9IGNvbmZpZy5leGNsdWRlUmVnZXhwLm1hcCgocmVnZXhwKSA9PiBuZXcgUmVnRXhwKHJlZ2V4cCwgJ2knKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHsgc3RycywgcmVnRXhwcyB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNJZ25vcmVkKFxuICB1cmw6IHN0cmluZyxcbiAgZXhjbHVkZVN0cmluZ3M6IHN0cmluZ1tdLFxuICBleGNsdWRlUmVnZXhwczogUmVnRXhwW11cbik6IGJvb2xlYW4ge1xuICBpZiAoZXhjbHVkZVN0cmluZ3MpIHtcbiAgICAvLyBkbyBub3Qgc2hvdyB0aGUgbG9hZGVyIGZvciB1cmxzIGluIHRoZSBgZXhjbHVkZWAgbGlzdFxuICAgIGlmIChcbiAgICAgIGV4Y2x1ZGVTdHJpbmdzLmZpbmRJbmRleCgoc3RyKSA9PiB1cmwudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKHN0cikpICE9PVxuICAgICAgLTFcbiAgICApIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChleGNsdWRlUmVnZXhwcykge1xuICAgIC8vIGRvIG5vdCBzaG93IHRoZSBsb2FkZXIgZm9yIHVybHMgd2hpY2ggbWF0Y2hlcyByZWdleHBzIGluIHRoZSBgZXhjbHVkZVJlZ2V4cGAgbGlzdFxuICAgIGlmIChleGNsdWRlUmVnZXhwcy5maW5kSW5kZXgoKHJlZ2V4cCkgPT4gcmVnZXhwLnRlc3QodXJsKSkgIT09IC0xKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG4iXX0=