{"version":3,"file":"ngx-ui-loader.umd.js","sources":["../../../projects/ngx-ui-loader/src/lib/utils/enums.ts","../../../projects/ngx-ui-loader/src/lib/utils/constants.ts","../../../projects/ngx-ui-loader/src/lib/core/ngx-ui-loader-config.token.ts","../../../projects/ngx-ui-loader/src/lib/core/ngx-ui-loader.service.ts","../../../projects/ngx-ui-loader/src/lib/core/ngx-ui-loader.component.ts","../../../projects/ngx-ui-loader/src/lib/core/ngx-ui-loader-blurred.directive.ts","../../../projects/ngx-ui-loader/src/lib/core/ngx-ui-loader.module.ts","../../../projects/ngx-ui-loader/src/lib/router/ngx-ui-loader-router-config.token.ts","../../../projects/ngx-ui-loader/src/lib/utils/functions.ts","../../../projects/ngx-ui-loader/src/lib/router/ngx-ui-loader-router.module.ts","../../../projects/ngx-ui-loader/src/lib/http/ngx-ui-loader-http-config.token.ts","../../../projects/ngx-ui-loader/src/lib/http/ngx-ui-loader-http.interceptor.ts","../../../projects/ngx-ui-loader/src/lib/http/ngx-ui-loader-http.module.ts","../../../projects/ngx-ui-loader/src/public-api.ts","../../../projects/ngx-ui-loader/src/ngx-ui-loader.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\n/**\n * Available spinner types\n */\nexport enum SPINNER {\n  ballScaleMultiple = 'ball-scale-multiple',\n  ballSpin = 'ball-spin',\n  ballSpinClockwise = 'ball-spin-clockwise',\n  ballSpinClockwiseFadeRotating = 'ball-spin-clockwise-fade-rotating',\n  ballSpinFadeRotating = 'ball-spin-fade-rotating',\n  chasingDots = 'chasing-dots',\n  circle = 'circle',\n  cubeGrid = 'cube-grid',\n  doubleBounce = 'double-bounce',\n  fadingCircle = 'fading-circle',\n  foldingCube = 'folding-cube',\n  pulse = 'pulse',\n  rectangleBounce = 'rectangle-bounce',\n  rectangleBounceParty = 'rectangle-bounce-party',\n  rectangleBouncePulseOut = 'rectangle-bounce-pulse-out',\n  rectangleBouncePulseOutRapid = 'rectangle-bounce-pulse-out-rapid',\n  rotatingPlane = 'rotating-plane',\n  squareJellyBox = 'square-jelly-box',\n  squareLoader = 'square-loader',\n  threeBounce = 'three-bounce',\n  threeStrings = 'three-strings',\n  wanderingCubes = 'wandering-cubes',\n}\n\n/**\n * Available postions\n */\nexport enum POSITION {\n  bottomCenter = 'bottom-center',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right',\n  centerCenter = 'center-center',\n  centerLeft = 'center-left',\n  centerRight = 'center-right',\n  topCenter = 'top-center',\n  topLeft = 'top-left',\n  topRight = 'top-right',\n}\n\n/**\n * Progress bar directions\n */\nexport enum PB_DIRECTION {\n  leftToRight = 'ltr',\n  rightToLeft = 'rtl',\n}\n","import { NgxUiLoaderConfig, Time } from '../utils/interfaces';\nimport { POSITION, PB_DIRECTION, SPINNER } from './enums';\n\n/**\n * The default value of foreground task id\n */\nexport const DEFAULT_FG_TASK_ID = 'fg-default';\n\n/**\n * The default value of background task id\n */\nexport const DEFAULT_BG_TASK_ID = 'bg-default';\n\n/**\n * The default value of loader id\n */\nexport const DEFAULT_MASTER_LOADER_ID = 'master';\n\nexport const DEFAULT_TIME: Time = {};\n\nexport const MIN_DELAY = 0;\n\nexport const MIN_TIME = 0;\n\nexport const CLOSING_TIME = 1001;\n\nexport const FAST_CLOSING_TIME = 601;\n\nexport const BACKGROUND = false;\n\nexport const FOREGROUND = true;\n\nexport const OVERLAY_DISAPPEAR_TIME = 500;\n\nexport const FAST_OVERLAY_DISAPPEAR_TIME = 300;\n\n/**\n * Http loader taskId\n */\nexport const HTTP_LOADER_TASK_ID = '$_http-loader';\n\n/**\n * Router loader taskId\n */\nexport const ROUTER_LOADER_TASK_ID = '$_router_loader';\n\n/**\n * The configuration of spinners\n */\nexport const SPINNER_CONFIG = {\n  'ball-scale-multiple': {\n    divs: 3,\n    class: 'sk-ball-scale-multiple',\n  },\n  'ball-spin': {\n    divs: 8,\n    class: 'sk-ball-spin',\n  },\n  'ball-spin-clockwise': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise',\n  },\n  'ball-spin-clockwise-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise-fade-rotating',\n  },\n  'ball-spin-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-fade-rotating',\n  },\n  'chasing-dots': {\n    divs: 2,\n    class: 'sk-chasing-dots',\n  },\n  circle: {\n    divs: 12,\n    class: 'sk-circle',\n  },\n  'cube-grid': {\n    divs: 9,\n    class: 'sk-cube-grid',\n  },\n  'double-bounce': {\n    divs: 2,\n    class: 'sk-double-bounce',\n  },\n  'fading-circle': {\n    divs: 12,\n    class: 'sk-fading-circle',\n  },\n  'folding-cube': {\n    divs: 4,\n    class: 'sk-folding-cube',\n  },\n  pulse: {\n    divs: 1,\n    class: 'sk-pulse',\n  },\n  'rectangle-bounce': {\n    divs: 5,\n    class: 'sk-rectangle-bounce',\n  },\n  'rectangle-bounce-party': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-party',\n  },\n  'rectangle-bounce-pulse-out': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out',\n  },\n  'rectangle-bounce-pulse-out-rapid': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out-rapid',\n  },\n  'rotating-plane': {\n    divs: 1,\n    class: 'sk-rotating-plane',\n  },\n  'square-jelly-box': {\n    divs: 2,\n    class: 'sk-square-jelly-box',\n  },\n  'square-loader': {\n    divs: 1,\n    class: 'sk-square-loader',\n  },\n  'three-bounce': {\n    divs: 3,\n    class: 'sk-three-bounce',\n  },\n  'three-strings': {\n    divs: 3,\n    class: 'sk-three-strings',\n  },\n  'wandering-cubes': {\n    divs: 2,\n    class: 'sk-wandering-cubes',\n  },\n};\n\n/**\n * The default configuration of ngx-ui-loader\n */\nexport const DEFAULT_CONFIG: NgxUiLoaderConfig = {\n  bgsColor: '#00ACC1',\n  bgsOpacity: 0.5,\n  bgsPosition: POSITION.bottomRight,\n  bgsSize: 60,\n  bgsType: SPINNER.ballSpinClockwise,\n  blur: 5,\n  delay: 0,\n  fastFadeOut: false,\n  fgsColor: '#00ACC1',\n  fgsPosition: POSITION.centerCenter,\n  fgsSize: 60,\n  fgsType: SPINNER.ballSpinClockwise,\n  gap: 24,\n  logoPosition: POSITION.centerCenter,\n  logoSize: 120,\n  logoUrl: '',\n  masterLoaderId: DEFAULT_MASTER_LOADER_ID,\n  overlayBorderRadius: '0',\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\n  pbColor: '#00ACC1',\n  pbDirection: PB_DIRECTION.leftToRight,\n  pbThickness: 3,\n  hasProgressBar: true,\n  text: '',\n  textColor: '#FFFFFF',\n  textPosition: POSITION.centerCenter,\n  maxTime: -1,\n  minTime: 300,\n};\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\n\n/**\n * Injection token for ngx-ui-loader configuration\n */\nexport const NGX_UI_LOADER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderConfig>(\n  'ngxUiLoaderCustom.config'\n);\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport {\n  BACKGROUND,\n  CLOSING_TIME,\n  DEFAULT_BG_TASK_ID,\n  DEFAULT_CONFIG,\n  DEFAULT_FG_TASK_ID,\n  DEFAULT_TIME,\n  FAST_CLOSING_TIME,\n  FOREGROUND,\n  MIN_DELAY,\n  MIN_TIME,\n  OVERLAY_DISAPPEAR_TIME,\n  FAST_OVERLAY_DISAPPEAR_TIME,\n} from '../utils/constants';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\nimport {\n  Loaders,\n  Loader,\n  ShowEvent,\n  Tasks,\n  Task,\n  Time,\n} from '../utils/interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxUiLoaderService {\n  /**\n   * For internal use only.\n   *\n   * @docs-private\n   */\n  backgroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only.\n   *\n   * @docs-private\n   */\n  foregroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only.\n   *\n   * @docs-private\n   */\n  showBackground$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only.\n   *\n   * @docs-private\n   */\n  showForeground$: Observable<ShowEvent>;\n\n  private bgClosing: BehaviorSubject<ShowEvent>;\n  private defaultConfig: NgxUiLoaderConfig;\n  private fgClosing: BehaviorSubject<ShowEvent>;\n  private loaders: Loaders;\n  private showBackground: BehaviorSubject<ShowEvent>;\n  private showForeground: BehaviorSubject<ShowEvent>;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    @Optional()\n    @Inject(NGX_UI_LOADER_CONFIG_TOKEN)\n    private config: NgxUiLoaderConfig\n  ) {\n    this.defaultConfig = { ...DEFAULT_CONFIG };\n    if (this.config) {\n      if (this.config.minTime && this.config.minTime < MIN_TIME) {\n        this.config.minTime = MIN_TIME;\n      }\n      this.defaultConfig = { ...this.defaultConfig, ...this.config };\n    }\n    this.loaders = {};\n    this.showForeground = new BehaviorSubject<ShowEvent>({\n      loaderId: '',\n      isShow: false,\n    });\n    this.showForeground$ = this.showForeground.asObservable();\n    this.showBackground = new BehaviorSubject<ShowEvent>({\n      loaderId: '',\n      isShow: false,\n    });\n    this.showBackground$ = this.showBackground.asObservable();\n    this.fgClosing = new BehaviorSubject<ShowEvent>({\n      loaderId: '',\n      isShow: false,\n    });\n    this.foregroundClosing$ = this.fgClosing.asObservable();\n    this.bgClosing = new BehaviorSubject<ShowEvent>({\n      loaderId: '',\n      isShow: false,\n    });\n    this.backgroundClosing$ = this.bgClosing.asObservable();\n  }\n\n  /**\n   * For internal use only.\n   *\n   * @docs-private\n   */\n  bindLoaderData(loaderId: string): void {\n    const isMaster = loaderId === this.defaultConfig.masterLoaderId;\n    if (this.loaders[loaderId]) {\n      if (this.loaders[loaderId].isBound) {\n        throw new Error(\n          `[ngx-ui-loader] - loaderId \"${loaderId}\" is duplicated.`\n        );\n      }\n      this.loaders[loaderId].isBound = true;\n      this.loaders[loaderId].isMaster = isMaster;\n      // emit showEvent after data loader is bound\n      if (this.hasRunningTask(FOREGROUND, loaderId)) {\n        this.showForeground.next({ loaderId, isShow: true });\n      } else {\n        if (this.hasRunningTask(BACKGROUND, loaderId)) {\n          this.showBackground.next({ loaderId, isShow: true });\n        }\n      }\n    } else {\n      this.createLoaderData(loaderId, isMaster, true);\n    }\n  }\n\n  /**\n   * For internal use only.\n   *\n   * @docs-private\n   */\n  destroyLoaderData(loaderId: string): void {\n    this.stopAllLoader(loaderId);\n    delete this.loaders[loaderId];\n  }\n\n  /**\n   * Get default loader configuration\n   *\n   * @returns default configuration object\n   */\n  getDefaultConfig(): NgxUiLoaderConfig {\n    return { ...this.defaultConfig };\n  }\n\n  /**\n   * Get all the loaders\n   */\n  getLoaders(): Loaders {\n    return JSON.parse(JSON.stringify(this.loaders));\n  }\n\n  /**\n   * Get data of a specified loader. If loaderId is not provided, it will return data of\n   * master loader(if existed). Otherwise null is returned.\n   */\n  getLoader(loaderId?: string): Loader {\n    loaderId = loaderId ? loaderId : this.defaultConfig.masterLoaderId;\n    if (this.loaders[loaderId]) {\n      return JSON.parse(JSON.stringify(this.loaders[loaderId]));\n    }\n    return null;\n  }\n\n  /**\n   * Start the foreground loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoader() method.\n   *\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'fd-default' by default.\n   */\n  startLoader(\n    loaderId: string,\n    taskId: string = DEFAULT_FG_TASK_ID,\n    time?: Time\n  ): void {\n    if (!this.readyToStart(loaderId, taskId, true, time)) {\n      return;\n    }\n    if (!this.loaders[loaderId].tasks[taskId].isOtherRunning) {\n      // no other foreground task running\n      if (this.hasRunningTask(BACKGROUND, loaderId)) {\n        this.backgroundCloseout(loaderId);\n        this.showBackground.next({ loaderId, isShow: false });\n      }\n      this.showForeground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the foreground loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stop() method.\n   * NOTE: Really this function just wraps startLoader() function\n   *\n   * @param taskId the optional task Id of the loading. taskId is set to 'fd-default' by default.\n   */\n  start(taskId: string = DEFAULT_FG_TASK_ID, time?: Time): void {\n    this.startLoader(this.defaultConfig.masterLoaderId, taskId, time);\n  }\n\n  /**\n   * Start the background loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoaderBackground() method.\n   *\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'bg-default' by default.\n   */\n  startBackgroundLoader(\n    loaderId: string,\n    taskId: string = DEFAULT_BG_TASK_ID,\n    time?: Time\n  ): void {\n    if (!this.readyToStart(loaderId, taskId, false, time)) {\n      return;\n    }\n    if (\n      !this.hasRunningTask(FOREGROUND, loaderId) &&\n      !this.loaders[loaderId].tasks[taskId].isOtherRunning\n    ) {\n      this.showBackground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the background loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopBackground() method.\n   * NOTE: Really this function just wraps startBackgroundLoader() function\n   *\n   * @param taskId the optional task Id of the loading. taskId is set to 'bg-default' by default.\n   */\n  startBackground(taskId: string = DEFAULT_BG_TASK_ID, time?: Time): void {\n    this.startBackgroundLoader(this.defaultConfig.masterLoaderId, taskId, time);\n  }\n\n  /**\n   * Stop a foreground loading of loader having `loaderId` with specific `taskId`\n   *\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'fg-default' is used.\n   * @returns Object\n   */\n  stopLoader(loaderId: string, taskId: string = DEFAULT_FG_TASK_ID): void {\n    if (!this.readyToStop(loaderId, taskId)) {\n      return;\n    }\n    if (!this.hasRunningTask(FOREGROUND, loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n      if (this.hasRunningTask(BACKGROUND, loaderId)) {\n        setTimeout(\n          () => {\n            if (this.hasRunningTask(BACKGROUND, loaderId)) {\n              // still have background tasks\n              this.showBackground.next({ loaderId, isShow: true });\n            }\n          },\n          this.defaultConfig.fastFadeOut\n            ? FAST_OVERLAY_DISAPPEAR_TIME\n            : OVERLAY_DISAPPEAR_TIME\n        );\n      }\n    }\n  }\n\n  /**\n   * Stop a foreground loading of master loader with specific `taskId`\n   *\n   * @param taskId the optional task Id to stop. If not provided, 'fg-default' is used.\n   * @returns Object\n   */\n  stop(taskId: string = DEFAULT_FG_TASK_ID): void {\n    this.stopLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop a background loading of loader having `loaderId` with specific `taskId`\n   *\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'bg-default' is used.\n   * @returns Object\n   */\n  stopBackgroundLoader(\n    loaderId: string,\n    taskId: string = DEFAULT_BG_TASK_ID\n  ): void {\n    if (!this.readyToStop(loaderId, taskId)) {\n      return;\n    }\n    if (\n      !this.hasRunningTask(FOREGROUND, loaderId) &&\n      !this.hasRunningTask(BACKGROUND, loaderId)\n    ) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n  }\n\n  /**\n   * Stop a background loading of master loader with specific taskId\n   *\n   * @param taskId the optional task Id to stop. If not provided, 'bg-default' is used.\n   * @returns Object\n   */\n  stopBackground(taskId: string = DEFAULT_BG_TASK_ID): void {\n    this.stopBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop all the background and foreground loadings of loader having `loaderId`\n   *\n   * @param loaderId the loader Id\n   */\n  stopAllLoader(loaderId: string): void {\n    if (!this.loaders[loaderId]) {\n      console.warn(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\n      return;\n    }\n    if (this.hasRunningTask(FOREGROUND, loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n    } else if (this.hasRunningTask(BACKGROUND, loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n    this.clearAllTimers(this.loaders[loaderId].tasks);\n    this.loaders[loaderId].tasks = {};\n  }\n\n  /**\n   * Stop all the background and foreground loadings of master loader\n   */\n  stopAll(): void {\n    this.stopAllLoader(this.defaultConfig.masterLoaderId);\n  }\n\n  /**\n   * Check whether the specified loader has a running task with the given `taskId`.\n   * If no `taskId` specified, it will check whether the loader has any running tasks.\n   * For internal use only.\n   *\n   * @docs-private\n   * @param isForeground foreground task or background task\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id\n   * @returns boolean\n   */\n  hasRunningTask(\n    isForeground: boolean,\n    loaderId: string,\n    taskId?: string\n  ): boolean {\n    if (this.loaders[loaderId]) {\n      const tasks: Tasks = this.loaders[loaderId].tasks;\n      if (taskId) {\n        return tasks[taskId] ? (tasks[taskId].startAt ? true : false) : false;\n      }\n      return Object.keys(tasks).some(\n        (id) => !!tasks[id].startAt && tasks[id].isForeground === isForeground\n      );\n    }\n    return false;\n  }\n\n  /**\n   * Create loader data if it does not exist\n   *\n   * @docs-private\n   */\n  private createLoaderData(\n    loaderId: string,\n    isMaster: boolean,\n    isBound: boolean\n  ): void {\n    if (!this.loaders[loaderId]) {\n      this.loaders[loaderId] = {\n        loaderId,\n        tasks: {},\n        isMaster,\n        isBound,\n      };\n    }\n  }\n\n  /**\n   * Manage to close foreground loading\n   *\n   * @docs-private\n   * @param loaderId the loader id\n   */\n  private foregroundCloseout(loaderId: string): void {\n    this.fgClosing.next({ loaderId, isShow: true });\n    setTimeout(\n      () => {\n        this.fgClosing.next({ loaderId, isShow: false });\n      },\n      this.defaultConfig.fastFadeOut ? FAST_CLOSING_TIME : CLOSING_TIME\n    );\n  }\n\n  /**\n   * Manage to close background loading\n   *\n   * @docs-private\n   * @param loaderId the loader id\n   */\n  private backgroundCloseout(loaderId: string): void {\n    this.bgClosing.next({ loaderId, isShow: true });\n    setTimeout(\n      () => {\n        this.bgClosing.next({ loaderId, isShow: false });\n      },\n      this.defaultConfig.fastFadeOut ? FAST_CLOSING_TIME : CLOSING_TIME\n    );\n  }\n\n  /**\n   * Clear all timers of the given task\n   *\n   * @docs-private\n   */\n  private clearTimers(task: Task): void {\n    clearTimeout(task.delayTimer);\n    clearTimeout(task.maxTimer);\n    clearTimeout(task.minTimer);\n  }\n\n  /**\n   * Clear all timers of the given tasks\n   *\n   * @docs-private\n   */\n  private clearAllTimers(tasks: Tasks): void {\n    Object.keys(tasks).map((id) => {\n      this.clearTimers(tasks[id]);\n    });\n  }\n\n  /**\n   * @docs-private\n   */\n  private readyToStart(\n    loaderId: string,\n    taskId: string,\n    isForeground: boolean,\n    time: Time = DEFAULT_TIME\n  ): boolean {\n    this.createLoaderData(loaderId, undefined, false);\n    const isOtherRunning = this.hasRunningTask(isForeground, loaderId);\n    if (!this.loaders[loaderId].tasks[taskId]) {\n      this.loaders[loaderId].tasks[taskId] = {\n        taskId,\n        isForeground,\n        minTime:\n          time.minTime >= MIN_TIME ? time.minTime : this.defaultConfig.minTime,\n        maxTime: time.maxTime ? time.maxTime : this.defaultConfig.maxTime,\n        delay: time.delay >= MIN_DELAY ? time.delay : this.defaultConfig.delay,\n      };\n    } else {\n      if (this.loaders[loaderId].tasks[taskId].isForeground !== isForeground) {\n        throw new Error(`[ngx-ui-loader] - taskId \"${taskId}\" is duplicated.`);\n      }\n    }\n    if (this.setDelayTimer(this.loaders[loaderId].tasks[taskId], loaderId)) {\n      return false;\n    }\n    this.loaders[loaderId].tasks[taskId] = {\n      ...this.loaders[loaderId].tasks[taskId],\n      isOtherRunning,\n      startAt: Date.now(),\n    };\n    this.setMaxTimer(this.loaders[loaderId].tasks[taskId], loaderId);\n    if (!this.loaders[loaderId].isBound) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @docs-private\n   */\n  private readyToStop(loaderId: string, taskId: string): boolean {\n    if (!this.loaders[loaderId]) {\n      console.warn(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\n      return false;\n    }\n    const task: Task = this.loaders[loaderId].tasks[taskId];\n    if (!task) {\n      return false;\n    }\n    if (task.isDelayed) {\n      this.clearTimers(task);\n      delete this.loaders[loaderId].tasks[taskId];\n      return false;\n    }\n    if (this.setMinTimer(task, loaderId)) {\n      return false;\n    }\n    this.clearTimers(task);\n    delete this.loaders[loaderId].tasks[taskId];\n    return true;\n  }\n\n  /**\n   * Set delay timer, if `delay` > 0\n   *\n   * @docs-private\n   * @returns boolean\n   */\n  private setDelayTimer(task: Task, loaderId: string): boolean {\n    if (task.delay > MIN_DELAY) {\n      if (task.isDelayed) {\n        return true;\n      }\n      if (!task.delayTimer) {\n        task.isDelayed = true;\n        task.delayTimer = setTimeout(() => {\n          task.isDelayed = false;\n          if (task.isForeground) {\n            this.startLoader(loaderId, task.taskId);\n          } else {\n            this.startBackgroundLoader(loaderId, task.taskId);\n          }\n        }, task.delay);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set maxTimer if `maxTime` > `minTime`\n   *\n   * @docs-private\n   * @returns boolean\n   */\n  private setMaxTimer(task: Task, loaderId: string): void {\n    if (task.maxTime > task.minTime) {\n      // restart the task, reset maxTimer\n      clearTimeout(task.maxTimer);\n      task.maxTimer = setTimeout(() => {\n        if (task.isForeground) {\n          this.stopLoader(loaderId, task.taskId);\n        } else {\n          this.stopBackgroundLoader(loaderId, task.taskId);\n        }\n      }, task.maxTime);\n    }\n  }\n\n  /**\n   * Set minTimer if `startAt` + `minTime` > `Date.now()`\n   *\n   * @docs-private\n   * @returns boolean\n   */\n  private setMinTimer(task: Task, loaderId: string): boolean {\n    const now = Date.now();\n    if (task.startAt) {\n      if (task.startAt + task.minTime > now) {\n        task.minTimer = setTimeout(() => {\n          if (task.isForeground) {\n            this.stopLoader(loaderId, task.taskId);\n          } else {\n            this.stopBackgroundLoader(loaderId, task.taskId);\n          }\n        }, task.startAt + task.minTime - now);\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","/* eslint-disable @angular-eslint/component-selector */\nimport {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  DomSanitizer,\n  SafeResourceUrl,\n  SafeStyle,\n} from '@angular/platform-browser';\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\nimport { DirectionType, PositionType, SpinnerType } from '../utils/types';\nimport { POSITION } from '../utils/enums';\nimport { SPINNER_CONFIG } from '../utils/constants';\nimport { ShowEvent } from '../utils/interfaces';\n\n@Component({\n  selector: 'ngx-ui-loader',\n  templateUrl: './ngx-ui-loader.component.html',\n  styleUrls: ['./ngx-ui-loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxUiLoaderComponent implements OnChanges, OnDestroy, OnInit {\n  @Input() bgsColor: string;\n  @Input() bgsOpacity: number;\n  @Input() bgsPosition: PositionType;\n  @Input() bgsSize: number;\n  @Input() bgsTemplate: TemplateRef<any>;\n  @Input() bgsType: SpinnerType;\n  @Input() fgsColor: string;\n  @Input() fgsPosition: PositionType;\n  @Input() fgsSize: number;\n  @Input() fgsTemplate: TemplateRef<any>;\n  @Input() fgsType: SpinnerType;\n  @Input() gap: number;\n  @Input() loaderId: string;\n  @Input() logoPosition: PositionType;\n  @Input() logoSize: number;\n  @Input() logoUrl: string;\n  @Input() overlayBorderRadius: string;\n  @Input() overlayColor: string;\n  @Input() pbColor: string;\n  @Input() pbDirection: DirectionType;\n  @Input() pbThickness: number;\n  @Input() hasProgressBar: boolean;\n  @Input() text: string;\n  @Input() textColor: string;\n  @Input() textPosition: PositionType;\n\n  fastFadeOut: boolean;\n  fgDivs: number[];\n  fgSpinnerClass: string;\n  bgDivs: number[];\n  bgSpinnerClass: string;\n  showForeground: boolean;\n  showBackground: boolean;\n  foregroundClosing: boolean;\n  backgroundClosing: boolean;\n\n  trustedLogoUrl: SafeResourceUrl;\n  logoTop: SafeStyle;\n  spinnerTop: SafeStyle;\n  textTop: SafeStyle;\n\n  showForegroundWatcher: Subscription;\n  showBackgroundWatcher: Subscription;\n  foregroundClosingWatcher: Subscription;\n  backgroundClosingWatcher: Subscription;\n\n  defaultConfig: NgxUiLoaderConfig;\n  initialized: boolean;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    private domSanitizer: DomSanitizer,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngxService: NgxUiLoaderService\n  ) {\n    this.initialized = false;\n    this.defaultConfig = this.ngxService.getDefaultConfig();\n\n    this.bgsColor = this.defaultConfig.bgsColor;\n    this.bgsOpacity = this.defaultConfig.bgsOpacity;\n    this.bgsPosition = this.defaultConfig.bgsPosition;\n    this.bgsSize = this.defaultConfig.bgsSize;\n    this.bgsType = this.defaultConfig.bgsType;\n    this.fastFadeOut = this.defaultConfig.fastFadeOut;\n    this.fgsColor = this.defaultConfig.fgsColor;\n    this.fgsPosition = this.defaultConfig.fgsPosition;\n    this.fgsSize = this.defaultConfig.fgsSize;\n    this.fgsType = this.defaultConfig.fgsType;\n    this.gap = this.defaultConfig.gap;\n    this.loaderId = this.defaultConfig.masterLoaderId;\n    this.logoPosition = this.defaultConfig.logoPosition;\n    this.logoSize = this.defaultConfig.logoSize;\n    this.logoUrl = this.defaultConfig.logoUrl;\n    this.overlayBorderRadius = this.defaultConfig.overlayBorderRadius;\n    this.overlayColor = this.defaultConfig.overlayColor;\n    this.pbColor = this.defaultConfig.pbColor;\n    this.pbDirection = this.defaultConfig.pbDirection;\n    this.pbThickness = this.defaultConfig.pbThickness;\n    this.hasProgressBar = this.defaultConfig.hasProgressBar;\n    this.text = this.defaultConfig.text;\n    this.textColor = this.defaultConfig.textColor;\n    this.textPosition = this.defaultConfig.textPosition;\n  }\n\n  /**\n   * On init event\n   */\n  ngOnInit() {\n    this.initializeSpinners();\n    this.ngxService.bindLoaderData(this.loaderId);\n    this.determinePositions();\n\n    this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(\n      this.logoUrl\n    );\n\n    this.showForegroundWatcher = this.ngxService.showForeground$\n      .pipe(\n        filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId)\n      )\n      .subscribe((data) => {\n        this.showForeground = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.showBackgroundWatcher = this.ngxService.showBackground$\n      .pipe(\n        filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId)\n      )\n      .subscribe((data) => {\n        this.showBackground = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.foregroundClosingWatcher = this.ngxService.foregroundClosing$\n      .pipe(\n        filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId)\n      )\n      .subscribe((data) => {\n        this.foregroundClosing = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.backgroundClosingWatcher = this.ngxService.backgroundClosing$\n      .pipe(\n        filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId)\n      )\n      .subscribe((data) => {\n        this.backgroundClosing = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n    this.initialized = true;\n  }\n\n  /**\n   * On changes event\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.initialized) {\n      return;\n    }\n\n    const bgsTypeChange: SimpleChange = changes.bgsType;\n    const fgsTypeChange: SimpleChange = changes.fgsType;\n    const logoUrlChange: SimpleChange = changes.logoUrl;\n\n    if (fgsTypeChange || bgsTypeChange) {\n      this.initializeSpinners();\n    }\n\n    this.determinePositions();\n\n    if (logoUrlChange) {\n      this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(\n        this.logoUrl\n      );\n    }\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    this.ngxService.destroyLoaderData(this.loaderId);\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n    if (this.showBackgroundWatcher) {\n      this.showBackgroundWatcher.unsubscribe();\n    }\n    if (this.foregroundClosingWatcher) {\n      this.foregroundClosingWatcher.unsubscribe();\n    }\n    if (this.backgroundClosingWatcher) {\n      this.backgroundClosingWatcher.unsubscribe();\n    }\n  }\n\n  /**\n   * Initialize spinners\n   */\n  private initializeSpinners(): void {\n    this.fgDivs = Array(SPINNER_CONFIG[this.fgsType].divs).fill(1);\n    this.fgSpinnerClass = SPINNER_CONFIG[this.fgsType].class;\n    this.bgDivs = Array(SPINNER_CONFIG[this.bgsType].divs).fill(1);\n    this.bgSpinnerClass = SPINNER_CONFIG[this.bgsType].class;\n  }\n\n  /**\n   * Determine the positions of spinner, logo and text\n   */\n  private determinePositions(): void {\n    this.logoTop = 'initial';\n    this.spinnerTop = 'initial';\n    this.textTop = 'initial';\n    const textSize = 24;\n\n    if (this.logoPosition.startsWith('center')) {\n      this.logoTop = '50%';\n    } else if (this.logoPosition.startsWith('top')) {\n      this.logoTop = '30px';\n    }\n\n    if (this.fgsPosition.startsWith('center')) {\n      this.spinnerTop = '50%';\n    } else if (this.fgsPosition.startsWith('top')) {\n      this.spinnerTop = '30px';\n    }\n\n    if (this.textPosition.startsWith('center')) {\n      this.textTop = '50%';\n    } else if (this.textPosition.startsWith('top')) {\n      this.textTop = '30px';\n    }\n\n    if (this.fgsPosition === POSITION.centerCenter) {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter) {\n        if (this.text && this.textPosition === POSITION.centerCenter) {\n          // logo, spinner and text\n          this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% - ${this.fgsSize / 2}px - ${textSize / 2}px - ${\n              this.gap\n            }px)`\n          );\n          this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% + ${this.logoSize / 2}px - ${textSize / 2}px)`\n          );\n          this.textTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% + ${this.logoSize / 2}px + ${this.gap}px + ${\n              this.fgsSize / 2\n            }px)`\n          );\n        } else {\n          // logo and spinner\n          this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% - ${this.fgsSize / 2}px - ${this.gap / 2}px)`\n          );\n          this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`\n          );\n        }\n      } else {\n        if (this.text && this.textPosition === POSITION.centerCenter) {\n          // spinner and text\n          this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`\n          );\n          this.textTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% + ${this.fgsSize / 2}px + ${this.gap / 2}px)`\n          );\n        }\n      }\n    } else {\n      if (\n        this.logoUrl &&\n        this.logoPosition === POSITION.centerCenter &&\n        this.text &&\n        this.textPosition === POSITION.centerCenter\n      ) {\n        // logo and text\n        this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(\n          `calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`\n        );\n        this.textTop = this.domSanitizer.bypassSecurityTrustStyle(\n          `calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`\n        );\n      }\n    }\n  }\n}\n","/* eslint-disable @angular-eslint/directive-selector */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Renderer2,\n  OnInit,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { ShowEvent } from '../utils/interfaces';\nimport {\n  FOREGROUND,\n  OVERLAY_DISAPPEAR_TIME,\n  FAST_OVERLAY_DISAPPEAR_TIME,\n} from '../utils/constants';\n\n@Directive({ selector: '[ngxUiLoaderBlurred]' })\nexport class NgxUiLoaderBlurredDirective implements OnInit, OnDestroy {\n  @Input() blur: number;\n  @Input() loaderId: string;\n\n  showForegroundWatcher: Subscription;\n  fastFadeOut: boolean;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private loader: NgxUiLoaderService\n  ) {\n    this.blur = this.loader.getDefaultConfig().blur;\n    this.loaderId = this.loader.getDefaultConfig().masterLoaderId;\n    this.fastFadeOut = this.loader.getDefaultConfig().fastFadeOut;\n  }\n\n  /**\n   * On Init event\n   */\n  ngOnInit() {\n    this.showForegroundWatcher = this.loader.showForeground$\n      .pipe(\n        filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId)\n      )\n      .subscribe((data) => {\n        if (data.isShow) {\n          const filterValue = `blur(${this.blur}px)`;\n          this.renderer.setStyle(\n            this.elementRef.nativeElement,\n            '-webkit-filter',\n            filterValue\n          );\n          this.renderer.setStyle(\n            this.elementRef.nativeElement,\n            'filter',\n            filterValue\n          );\n        } else {\n          setTimeout(\n            () => {\n              if (!this.loader.hasRunningTask(FOREGROUND, data.loaderId)) {\n                this.renderer.setStyle(\n                  this.elementRef.nativeElement,\n                  '-webkit-filter',\n                  'none'\n                );\n                this.renderer.setStyle(\n                  this.elementRef.nativeElement,\n                  'filter',\n                  'none'\n                );\n              }\n            },\n            this.fastFadeOut\n              ? FAST_OVERLAY_DISAPPEAR_TIME\n              : OVERLAY_DISAPPEAR_TIME\n          );\n        }\n      });\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxUiLoaderComponent } from './ngx-ui-loader.component';\nimport { NgxUiLoaderBlurredDirective } from './ngx-ui-loader-blurred.directive';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective],\n  exports: [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective],\n})\nexport class NgxUiLoaderModule {\n  /**\n   * forRoot\n   *\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(\n    ngxUiLoaderConfig: NgxUiLoaderConfig\n  ): ModuleWithProviders<NgxUiLoaderModule> {\n    return {\n      ngModule: NgxUiLoaderModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_CONFIG_TOKEN,\n          useValue: ngxUiLoaderConfig,\n        },\n      ],\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderRouterConfig } from '../utils/interfaces';\n\n/**\n * Injection token for ngx-ui-loader-router configuration\n */\nexport const NGX_UI_LOADER_ROUTER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderRouterConfig>(\n  'ngxUiLoaderRouterCustom.config'\n);\n","/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport { Config, Exclude } from './interfaces';\n\nexport function getExcludeObj(config: Config): Exclude {\n  let strs: string[];\n  let regExps: RegExp[];\n\n  if (config) {\n    if (config.exclude) {\n      strs = config.exclude.map((url) => url.toLowerCase());\n    }\n\n    if (config.excludeRegexp) {\n      regExps = config.excludeRegexp.map((regexp) => new RegExp(regexp, 'i'));\n    }\n  }\n\n  return { strs, regExps };\n}\n\nexport function isIgnored(\n  url: string,\n  excludeStrings: string[],\n  excludeRegexps: RegExp[]\n): boolean {\n  if (excludeStrings) {\n    // do not show the loader for urls in the `exclude` list\n    if (\n      excludeStrings.findIndex((str) => url.toLowerCase().startsWith(str)) !==\n      -1\n    ) {\n      return true;\n    }\n  }\n\n  if (excludeRegexps) {\n    // do not show the loader for urls which matches regexps in the `excludeRegexp` list\n    if (excludeRegexps.findIndex((regexp) => regexp.test(url)) !== -1) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  Inject,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n  RouterEvent,\n} from '@angular/router';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NgxUiLoaderRouterConfig } from '../utils/interfaces';\nimport { NGX_UI_LOADER_ROUTER_CONFIG_TOKEN } from './ngx-ui-loader-router-config.token';\nimport { ROUTER_LOADER_TASK_ID } from '../utils/constants';\nimport { getExcludeObj, isIgnored } from '../utils/functions';\nimport { Exclude } from '../utils/interfaces';\n\n@NgModule({})\nexport class NgxUiLoaderRouterModule {\n  private exclude: Exclude;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    @Optional() @SkipSelf() parentModule: NgxUiLoaderRouterModule,\n    @Optional()\n    @Inject(NGX_UI_LOADER_ROUTER_CONFIG_TOKEN)\n    customConfig: NgxUiLoaderRouterConfig,\n    router: Router,\n    loader: NgxUiLoaderService\n  ) {\n    if (parentModule) {\n      throw new Error(\n        '[ngx-ui-loader] - NgxUiLoaderRouterModule is already loaded. It should be imported in the root `AppModule` only!'\n      );\n    }\n\n    let config: NgxUiLoaderRouterConfig = {\n      loaderId: loader.getDefaultConfig().masterLoaderId,\n      showForeground: true,\n    };\n\n    this.exclude = getExcludeObj(customConfig);\n\n    if (customConfig) {\n      config = { ...config, ...customConfig };\n    }\n\n    router.events.subscribe((event: RouterEvent) => {\n      if (event instanceof NavigationStart) {\n        if (!isIgnored(event.url, this.exclude.strs, this.exclude.regExps)) {\n          if (config.showForeground) {\n            loader.startLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          } else {\n            loader.startBackgroundLoader(\n              config.loaderId,\n              ROUTER_LOADER_TASK_ID\n            );\n          }\n        }\n      }\n\n      if (\n        event instanceof NavigationEnd ||\n        event instanceof NavigationCancel ||\n        event instanceof NavigationError\n      ) {\n        if (!isIgnored(event.url, this.exclude.strs, this.exclude.regExps)) {\n          if (config.showForeground) {\n            loader.stopLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          } else {\n            loader.stopBackgroundLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * forRoot\n   *\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(\n    routerConfig: NgxUiLoaderRouterConfig\n  ): ModuleWithProviders<NgxUiLoaderRouterModule> {\n    return {\n      ngModule: NgxUiLoaderRouterModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_ROUTER_CONFIG_TOKEN,\n          useValue: routerConfig,\n        },\n      ],\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderHttpConfig } from '../utils/interfaces';\n\n/**\n * Injection token for ngx-ui-loader-http configuration\n */\nexport const NGX_UI_LOADER_HTTP_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderHttpConfig>(\n  'ngxUiLoaderHttpCustom.config'\n);\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpEvent,\n  HttpHandler,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\nimport { NgxUiLoaderHttpConfig } from '../utils/interfaces';\nimport { HTTP_LOADER_TASK_ID } from '../utils/constants';\nimport { getExcludeObj, isIgnored } from '../utils/functions';\nimport { Exclude } from '../utils/interfaces';\n\n@Injectable()\nexport class NgxUiLoaderHttpInterceptor implements HttpInterceptor {\n  private count: number;\n  private config: NgxUiLoaderHttpConfig;\n  private exclude: Exclude;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    @Optional()\n    @Inject(NGX_UI_LOADER_HTTP_CONFIG_TOKEN)\n    customConfig: NgxUiLoaderHttpConfig,\n    private loader: NgxUiLoaderService\n  ) {\n    this.count = 0;\n    this.config = {\n      loaderId: this.loader.getDefaultConfig().masterLoaderId,\n      showForeground: false,\n    };\n\n    this.exclude = getExcludeObj(customConfig);\n\n    if (customConfig) {\n      this.config = { ...this.config, ...customConfig };\n    }\n  }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (isIgnored(req.url, this.exclude.strs, this.exclude.regExps)) {\n      return next.handle(req);\n    }\n\n    this.count++;\n    if (this.config.showForeground) {\n      this.loader.startLoader(\n        this.config.loaderId,\n        HTTP_LOADER_TASK_ID,\n        this.config\n      );\n    } else {\n      this.loader.startBackgroundLoader(\n        this.config.loaderId,\n        HTTP_LOADER_TASK_ID,\n        this.config\n      );\n    }\n\n    return next.handle(req).pipe(\n      finalize(() => {\n        this.count--;\n        if (this.count === 0) {\n          if (this.config.showForeground) {\n            this.loader.stopLoader(this.config.loaderId, HTTP_LOADER_TASK_ID);\n          } else {\n            this.loader.stopBackgroundLoader(\n              this.config.loaderId,\n              HTTP_LOADER_TASK_ID\n            );\n          }\n        }\n      })\n    );\n  }\n}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgxUiLoaderHttpInterceptor } from './ngx-ui-loader-http.interceptor';\nimport { NgxUiLoaderHttpConfig } from '../utils/interfaces';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\n\n@NgModule({\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NgxUiLoaderHttpInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class NgxUiLoaderHttpModule {\n  /**\n   * Constructor\n   */\n  constructor(@Optional() @SkipSelf() parentModule: NgxUiLoaderHttpModule) {\n    if (parentModule) {\n      throw new Error(\n        '[ngx-ui-loader] - NgxUiLoaderHttpModule is already loaded. It should be imported in the root `AppModule` only!'\n      );\n    }\n  }\n\n  /**\n   * forRoot\n   *\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(\n    httpConfig: NgxUiLoaderHttpConfig\n  ): ModuleWithProviders<NgxUiLoaderHttpModule> {\n    return {\n      ngModule: NgxUiLoaderHttpModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_HTTP_CONFIG_TOKEN,\n          useValue: httpConfig,\n        },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-ui-loader\n */\n\nexport { NgxUiLoaderService } from './lib/core/ngx-ui-loader.service';\nexport { NgxUiLoaderModule } from './lib/core/ngx-ui-loader.module';\nexport { SPINNER, POSITION, PB_DIRECTION } from './lib/utils/enums';\nexport {\n  Loader,\n  Loaders,\n  NgxUiLoaderConfig,\n  NgxUiLoaderHttpConfig,\n  NgxUiLoaderRouterConfig,\n  Task,\n  Tasks,\n  Time,\n} from './lib/utils/interfaces';\nexport { NgxUiLoaderRouterModule } from './lib/router/ngx-ui-loader-router.module';\nexport { NgxUiLoaderHttpModule } from './lib/http/ngx-ui-loader-http.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NgxUiLoaderBlurredDirective as ɵc} from './lib/core/ngx-ui-loader-blurred.directive';\nexport {NGX_UI_LOADER_CONFIG_TOKEN as ɵa} from './lib/core/ngx-ui-loader-config.token';\nexport {NgxUiLoaderComponent as ɵb} from './lib/core/ngx-ui-loader.component';\nexport {NGX_UI_LOADER_HTTP_CONFIG_TOKEN as ɵf} from './lib/http/ngx-ui-loader-http-config.token';\nexport {NgxUiLoaderHttpInterceptor as ɵe} from './lib/http/ngx-ui-loader-http.interceptor';\nexport {NGX_UI_LOADER_ROUTER_CONFIG_TOKEN as ɵd} from './lib/router/ngx-ui-loader-router-config.token';"],"names":["SPINNER","POSITION","PB_DIRECTION","InjectionToken","BehaviorSubject","Injectable","Optional","Inject","filter","Component","ChangeDetectionStrategy","DomSanitizer","ChangeDetectorRef","Input","Directive","ElementRef","Renderer2","NgModule","CommonModule","router","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","SkipSelf","Router","finalize","HTTP_INTERCEPTORS"],"mappings":"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"}